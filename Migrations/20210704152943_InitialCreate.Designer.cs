// <auto-generated />
using Data1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data1.Migrations
{
    [DbContext(typeof(MovieContext))]
    [Migration("20210704152943_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data1.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Moviename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MovieId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Data1.Models.Serie", b =>
                {
                    b.Property<int>("SerieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Seriename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SerieId");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("Data1.Models.UserApp", b =>
                {
                    b.Property<int>("UserAppId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserAppId");

                    b.ToTable("UserApps");
                });

            modelBuilder.Entity("Data1.Models.UserWatchList", b =>
                {
                    b.Property<int>("UserWatchListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserAppId")
                        .HasColumnType("int");

                    b.Property<int>("WatchListId")
                        .HasColumnType("int");

                    b.HasKey("UserWatchListId");

                    b.HasIndex("UserAppId");

                    b.HasIndex("WatchListId");

                    b.ToTable("UserWatchLists");
                });

            modelBuilder.Entity("Data1.Models.WatchList", b =>
                {
                    b.Property<int>("WatchListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("SerieId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WatchListId");

                    b.HasIndex("MovieId");

                    b.HasIndex("SerieId");

                    b.ToTable("WatchLists");
                });

            modelBuilder.Entity("Data1.Models.UserWatchList", b =>
                {
                    b.HasOne("Data1.Models.UserApp", "UserApp")
                        .WithMany("UserWatchLists")
                        .HasForeignKey("UserAppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data1.Models.WatchList", "WatchList")
                        .WithMany("UserWatchLists")
                        .HasForeignKey("WatchListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserApp");

                    b.Navigation("WatchList");
                });

            modelBuilder.Entity("Data1.Models.WatchList", b =>
                {
                    b.HasOne("Data1.Models.Movie", "Movie")
                        .WithMany("WatchLists")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data1.Models.Serie", "Serie")
                        .WithMany("WatchLists")
                        .HasForeignKey("SerieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Serie");
                });

            modelBuilder.Entity("Data1.Models.Movie", b =>
                {
                    b.Navigation("WatchLists");
                });

            modelBuilder.Entity("Data1.Models.Serie", b =>
                {
                    b.Navigation("WatchLists");
                });

            modelBuilder.Entity("Data1.Models.UserApp", b =>
                {
                    b.Navigation("UserWatchLists");
                });

            modelBuilder.Entity("Data1.Models.WatchList", b =>
                {
                    b.Navigation("UserWatchLists");
                });
#pragma warning restore 612, 618
        }
    }
}
